version: '3.8'

services:
  api_gateway:
    build: ./api_gateway
    image: d1y0rbek/api_gateway:latest
    container_name: api_gateway
    ports:
      - 8080:8080
    depends_on:
      orderservice:
        condition: service_started
      product-service:
        condition: service_started
      user-service:
        condition: service_started
      mongo:
        condition: service_started
    networks: 
      - ecommerce  

  orderservice:
    build: ./OrderServiceBot
    image: d1y0rbek/orderservice:latest
    container_name: orderservice_container
    ports:
      - 8081:8081
    depends_on:
      - mongo
    networks:
      - ecommerce

  product-service:
    build: ./product-service
    image: d1y0rbek/product-service:latest
    container_name: product-service_container
    ports:
      - 8082:8082
    depends_on:
      - mongo
    networks:
      - ecommerce
  user-service:
    build: ./userservice
    image: d1y0rbek/account-service:latest
    container_name: account-service
    ports:
      - 8083:8083
    depends_on:
      - mongo
    networks:
      - ecommerce    

  mongo:
    image: mongo:latest
    container_name: mongo_e_commerce
    ports:
      - "27017:27017"
    volumes:
      - mongo-db-data:/data/db
    networks:
      - ecommerce
  redis:
    container_name: redis_ecommerce
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -q PONG || exit 1"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    networks:
      - ecommerce

networks:
  ecommerce:
    driver: bridge

volumes:
  mongo-db-data:
