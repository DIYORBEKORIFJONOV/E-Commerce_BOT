services:
  api_gateway:
    build: ./api_gateway
    container_name: api_gateway
    ports:
      - 8080:8080
    depends_on:
      orderservice:
        condition: service_started
      product-service:
        condition: service_started
      mongo:
        condition: service_started
      minio:
        condition: service_healthy
    networks:
      - ecommerce

  orderservice:
    build: ./OrderServiceBot
    container_name: orderservice_container
    image: orderservice_image
    ports:
      - 8082:8082
    depends_on:
      - mongo
    networks:
      - ecommerce

  product-service:
    build: ./product-service
    container_name: product-service_container
    image: product-service_image
    ports:
      - 8081:8081
    depends_on:
      - mongo
    networks:
      - ecommerce

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27018:27017"
    volumes:
      - mongo-db-data:/data/db
    networks:
      - ecommerce

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=secretpass
    volumes:
      - minio-data:/data
    ports:
      - "9003:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]  # Локальный порт внутри контейнера MinIO
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ecommerce

networks:
  ecommerce:
    driver: bridge

volumes:
  mongo-db-data:
  minio-data: